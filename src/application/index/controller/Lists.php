<?php
 namespace app\index\controller; use think\Url; use think\Log; use think\Debug; use app\index\Defs as IndexDefs; use app\index\logic\Lists as ListsLogic; class Lists extends Common { public function layout() { goto qoe8h; zW1H3: D0nZK: goto qrscF; Mp_bT: $this->assign("\165\162\x6c\110\x72\x65\x66\x73", $urlHrefs); goto qLdss; qoe8h: if (!request()->isGet()) { goto D0nZK; } goto wC7cq; wC7cq: $urlHrefs = array("\x74\x72\x65\145" => url("\164\162\x65\145"), "\x6c\151\x73\x74\163" => url("\154\151\163\164\163"), "\163\x75\142\163\143\162\x69\142\x65\x72\163" => url("\x53\x75\142\163\x63\162\151\142\145\x72\163\57\x73\165\x62\163\x63\162\x69\x62\x65\162\163")); goto Mp_bT; qLdss: return $this->fetch(); goto zW1H3; qrscF: } public function tree() { goto Kd5wk; oXYF4: $active = input("\160\157\163\164\x2e\x61\143\164\151\x76\145", IndexDefs::eListActive); goto sRtsv; SGBcR: $urlHrefs = array("\x74\162\145\x65" => url("\x69\156\144\145\170\x2f\114\151\x73\164\163\57\x74\162\145\x65"), "\141\144\144" => url("\151\156\x64\145\x78\x2f\x4c\x69\163\164\x73\x2f\141\x64\144"), "\x65\144\x69\x74" => url("\151\156\x64\145\170\57\114\151\163\x74\x73\x2f\x65\144\x69\164"), "\x64\x65\154\x65\164\x65" => url("\x69\x6e\144\x65\170\57\x4c\x69\x73\x74\x73\x2f\144\x65\154\x65\164\x65"), "\165\160\x64\141\164\x65\x4f\162\x64\145\162" => url("\165\160\x64\x61\164\145\x4f\x72\x64\x65\x72")); goto o6UuK; M0TuL: dDB6S: goto oXYF4; o6UuK: $this->assign("\x75\162\x6c\110\x72\145\x66\163", $urlHrefs); goto qeJL2; Kd5wk: if (!request()->isGet()) { goto dDB6S; } goto SGBcR; qeJL2: return $this->fetch(); goto M0TuL; sRtsv: return json(ListsLogic::I()->loadTreeDatas($active)); goto jZ3rh; jZ3rh: } public function lists($search = array(), $page = 1, $rows = DEFAULT_PAGE_ROWS, $sort = '', $order = '') { goto eWxNH; JxhSw: return json(ListsLogic::I()->loadLists($search, $page, $rows, $sort, $order)); goto Xa2Gh; GBaR4: $urlHrefs = ["\154\151\163\x74\x73" => url("\x6c\151\163\164\163"), "\x61\x64\x64" => url("\x61\x64\144"), "\145\144\x69\x74" => url("\x65\x64\x69\164"), "\x64\145\x6c\145\164\x65" => url("\x64\145\154\x65\x74\x65"), "\x75\160\144\x61\164\145\101\143\x74\151\166\x65" => url("\165\160\x64\141\164\145\x41\143\x74\151\166\x65"), "\x73\165\142\x73\143\162\151\x62\145\162\x73\111\x6d\160\x6f\162\x74\x4c\151\163\164" => url("\x69\156\144\145\170\x2f\123\165\x62\x73\143\x72\151\142\x65\162\163\x2f\163\x75\142\x73\x63\x72\151\x62\x65\x72\x73\111\x6d\x70\157\x72\164\x4c\x69\163\x74")]; goto r3Bpd; eWxNH: if (!request()->isGet()) { goto cLhvU; } goto GBaR4; iIkG_: return $this->fetch(); goto Bk0n2; Bk0n2: cLhvU: goto JxhSw; r3Bpd: $this->assign("\165\162\x6c\x48\162\145\x66\x73", $urlHrefs); goto iIkG_; Xa2Gh: } public function updateActive($listId) { goto MC4jX; iAKI0: return ajaxSuccess("\346\x93\215\344\275\234\346\210\220\345\x8a\237"); goto cHr73; ALqXe: $listsLogic->updateActive($listId, $isActive); goto iAKI0; MC4jX: $isActive = input("\160\x6f\163\x74\x2e\x69\163\x41\143\x74\x69\x76\x65\57\142"); goto YxPOE; YxPOE: $listsLogic = new ListsLogic(); goto ALqXe; cHr73: } public function updateOrder($id) { goto z5buy; vfJr_: ListsLogic::I()->updateOrder($id, $upDown); goto QEzdr; QEzdr: return ajaxSuccess("\xe6\223\215\xe4\275\234\xe6\210\220\xe5\212\237"); goto IqHdR; z5buy: $upDown = input("\x70\x6f\x73\x74\56\165\x70\104\x6f\x77\x6e\57\x64"); goto vfJr_; IqHdR: } public function add() { goto N6ftd; N6ftd: if (!request()->isGet()) { goto LnF_z; } goto H8lom; dECor: $formData = request()->post("\x66\157\162\x6d\104\x61\x74\x61\57\x61", 0); goto LIhh9; ds6_c: $ret = ListsLogic::I()->addList($formData); goto dZltK; o126a: xHaTy: goto fXOiY; Ppt5Z: return ajaxSuccess("\346\223\x8d\344\275\234\345\xa4\xb1\xe8\xb4\xa5"); goto fHT2L; fdMKe: LnF_z: goto dECor; H8lom: return $this->fetch(); goto fdMKe; JVCQ2: k9smB: goto ds6_c; LIhh9: if (!empty($formData)) { goto k9smB; } goto fUZGS; sZ16O: Rwshz: goto n5FsG; dZltK: if ($ret) { goto Rwshz; } goto Ppt5Z; n5FsG: return ajaxSuccess("\xe6\x93\x8d\344\xbd\x9c\346\210\x90\345\x8a\x9f"); goto o126a; fUZGS: return ajaxError("\351\x9d\236\346\263\225\345\217\x82\xe6\x95\xb0"); goto JVCQ2; fHT2L: goto xHaTy; goto sZ16O; fXOiY: } public function edit($listId) { goto HfD6D; PpmMj: return $this->fetch("\x63\x6f\155\155\157\156\x2f\145\162\162\x6f\162"); goto iQcfA; MuRJk: return ajaxSuccess("\346\x93\215\xe4\275\234\xe5\xa4\261\350\264\245"); goto ib36H; iQcfA: duoU9: goto Fl3KT; ib36H: goto U7jkD; goto dpQOT; fm1QW: if (!empty($formData)) { goto G2bWp; } goto I3VVy; jYLAa: $listInfos = $listsLogic->getList($listId); goto EH1vL; I3VVy: return ajaxError("\351\235\236\xe6\263\x95\xe5\x8f\x82\346\225\260"); goto obWNc; HfD6D: $listsLogic = new ListsLogic(); goto jYLAa; obWNc: G2bWp: goto frsFt; EH1vL: if ($listInfos) { goto duoU9; } goto PpmMj; qaVNt: if ($ret) { goto gfGA7; } goto MuRJk; Fl3KT: if (!request()->isGet()) { goto DREii; } goto bM7TS; Wk8uC: return $this->fetch(); goto kbH7g; frsFt: $ret = $listsLogic->updateList($listId, $formData); goto qaVNt; Qt1KJ: $this->assign("\x62\151\156\x64\126\x61\154\x75\x65\x73", $bindValues); goto Wk8uC; BLRAx: U7jkD: goto ZxLmO; NFMbD: $formData = request()->post("\146\x6f\162\x6d\x44\x61\164\x61\x2f\x61", 0); goto fm1QW; kbH7g: DREii: goto NFMbD; PVsdC: return ajaxSuccess("\346\x93\x8d\344\xbd\234\346\210\x90\345\x8a\x9f"); goto BLRAx; bM7TS: $bindValues = ["\x6e\x61\x6d\x65" => $listInfos["\x6e\x61\x6d\x65"], "\x64\145\x73\143\162\x69\160\x74\x69\157\156" => $listInfos["\144\145\163\x63\162\x69\x70\164\151\x6f\x6e"]]; goto Qt1KJ; dpQOT: gfGA7: goto PVsdC; ZxLmO: } public function delete($listId) { goto LgNxn; LgNxn: $listsLogic = new ListsLogic(); goto Hos8W; KMqc2: UZUlq: goto svKL_; CfHId: DHphD: goto w0W6P; KGX7N: return ajaxSuccess("\346\x93\x8d\344\275\x9c\345\244\261\350\xb4\xa5"); goto nUm5a; nUm5a: goto UZUlq; goto CfHId; Hos8W: if ($listsLogic->deleteList($listId)) { goto DHphD; } goto KGX7N; w0W6P: return ajaxSuccess("\346\x93\215\344\275\234\346\x88\220\345\x8a\x9f"); goto KMqc2; svKL_: } public function listsLight($subscriberId = '') { goto L7x3e; RMVjm: $this->assign("\154\151\163\x74\x73", $lists); goto oHkD1; L7x3e: $lists = ListsLogic::I()->loadListsBySubscriber($subscriberId); goto RMVjm; oHkD1: return $this->fetch(); goto oAOOf; oAOOf: } public function chooseLists($campaignId = '') { goto KvKnx; KvKnx: if (!request()->isGet()) { goto eXwQh; } goto vk5FX; vk5FX: $urlHrefs = array("\143\x68\x6f\x6f\x73\145\x4c\151\x73\x74\x73" => url("\143\x68\x6f\x6f\x73\x65\114\x69\163\164\163", ["\143\x61\x6d\x70\x61\151\x67\156\x49\144" => $campaignId])); goto ikEqq; FtihJ: return $this->fetch(); goto gIsxI; ikEqq: $this->assign("\165\x72\154\x48\162\145\146\x73", $urlHrefs); goto FtihJ; QsaYz: $listsLogic = new ListsLogic(); goto C_QKo; C_QKo: return json($listsLogic->loadTreeGridDatas($campaignId)); goto oYtLf; gIsxI: eXwQh: goto QsaYz; oYtLf: } public function campaignSelectedListsDatagrid($campaignId) { $listsLogic = new ListsLogic(); return json($listsLogic->loadDataGridDatasByCampaign($campaignId)); } }
